
package ws;

import java.util.List;
import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Gestor", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Gestor {


    /**
     * 
     * @param escuderia
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "createEscuderia", targetNamespace = "http://ws/", className = "ws.CreateEscuderia")
    @Action(input = "http://ws/Gestor/createEscuderia")
    public void createEscuderia(
        @WebParam(name = "escuderia", targetNamespace = "")
        Escuderia escuderia);

    /**
     * 
     * @param monoplaza
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "createMonoplaza", targetNamespace = "http://ws/", className = "ws.CreateMonoplaza")
    @Action(input = "http://ws/Gestor/createMonoplaza")
    public void createMonoplaza(
        @WebParam(name = "monoplaza", targetNamespace = "")
        Monoplaza monoplaza);

    /**
     * 
     * @param piloto
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "createPiloto", targetNamespace = "http://ws/", className = "ws.CreatePiloto")
    @Action(input = "http://ws/Gestor/createPiloto")
    public void createPiloto(
        @WebParam(name = "piloto", targetNamespace = "")
        Piloto piloto);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Escuderia>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllEscuderia", targetNamespace = "http://ws/", className = "ws.FindAllEscuderia")
    @ResponseWrapper(localName = "findAllEscuderiaResponse", targetNamespace = "http://ws/", className = "ws.FindAllEscuderiaResponse")
    @Action(input = "http://ws/Gestor/findAllEscuderiaRequest", output = "http://ws/Gestor/findAllEscuderiaResponse")
    public List<Escuderia> findAllEscuderia();

    /**
     * 
     * @param idEscuderia
     * @return
     *     returns ws.Escuderia
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findEscuderia", targetNamespace = "http://ws/", className = "ws.FindEscuderia")
    @ResponseWrapper(localName = "findEscuderiaResponse", targetNamespace = "http://ws/", className = "ws.FindEscuderiaResponse")
    @Action(input = "http://ws/Gestor/findEscuderiaRequest", output = "http://ws/Gestor/findEscuderiaResponse")
    public Escuderia findEscuderia(
        @WebParam(name = "idEscuderia", targetNamespace = "")
        int idEscuderia);

    /**
     * 
     * @param escuderia
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "editEscuderia", targetNamespace = "http://ws/", className = "ws.EditEscuderia")
    @Action(input = "http://ws/Gestor/editEscuderia")
    public void editEscuderia(
        @WebParam(name = "escuderia", targetNamespace = "")
        Escuderia escuderia);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Premio>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllPremio", targetNamespace = "http://ws/", className = "ws.FindAllPremio")
    @ResponseWrapper(localName = "findAllPremioResponse", targetNamespace = "http://ws/", className = "ws.FindAllPremioResponse")
    @Action(input = "http://ws/Gestor/findAllPremioRequest", output = "http://ws/Gestor/findAllPremioResponse")
    public List<Premio> findAllPremio();

    /**
     * 
     * @param premio
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removePremio", targetNamespace = "http://ws/", className = "ws.RemovePremio")
    @Action(input = "http://ws/Gestor/removePremio")
    public void removePremio(
        @WebParam(name = "premio", targetNamespace = "")
        int premio);

    /**
     * 
     * @param idMonoplaza
     * @return
     *     returns ws.Monoplaza
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findMonoplaza", targetNamespace = "http://ws/", className = "ws.FindMonoplaza")
    @ResponseWrapper(localName = "findMonoplazaResponse", targetNamespace = "http://ws/", className = "ws.FindMonoplazaResponse")
    @Action(input = "http://ws/Gestor/findMonoplazaRequest", output = "http://ws/Gestor/findMonoplazaResponse")
    public Monoplaza findMonoplaza(
        @WebParam(name = "idMonoplaza", targetNamespace = "")
        int idMonoplaza);

    /**
     * 
     * @param escuderia
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeEscuderia", targetNamespace = "http://ws/", className = "ws.RemoveEscuderia")
    @Action(input = "http://ws/Gestor/removeEscuderia")
    public void removeEscuderia(
        @WebParam(name = "escuderia", targetNamespace = "")
        int escuderia);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Circuito>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllCircuito", targetNamespace = "http://ws/", className = "ws.FindAllCircuito")
    @ResponseWrapper(localName = "findAllCircuitoResponse", targetNamespace = "http://ws/", className = "ws.FindAllCircuitoResponse")
    @Action(input = "http://ws/Gestor/findAllCircuitoRequest", output = "http://ws/Gestor/findAllCircuitoResponse")
    public List<Circuito> findAllCircuito();

    /**
     * 
     * @return
     *     returns java.util.List<ws.Piloto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllPiloto", targetNamespace = "http://ws/", className = "ws.FindAllPiloto")
    @ResponseWrapper(localName = "findAllPilotoResponse", targetNamespace = "http://ws/", className = "ws.FindAllPilotoResponse")
    @Action(input = "http://ws/Gestor/findAllPilotoRequest", output = "http://ws/Gestor/findAllPilotoResponse")
    public List<Piloto> findAllPiloto();

    /**
     * 
     * @param premio
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "editPremio", targetNamespace = "http://ws/", className = "ws.EditPremio")
    @Action(input = "http://ws/Gestor/editPremio")
    public void editPremio(
        @WebParam(name = "premio", targetNamespace = "")
        Premio premio);

    /**
     * 
     * @param escuderia
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeCircuito", targetNamespace = "http://ws/", className = "ws.RemoveCircuito")
    @Action(input = "http://ws/Gestor/removeCircuito")
    public void removeCircuito(
        @WebParam(name = "escuderia", targetNamespace = "")
        int escuderia);

    /**
     * 
     * @param monoplaza
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "editMonoplaza", targetNamespace = "http://ws/", className = "ws.EditMonoplaza")
    @Action(input = "http://ws/Gestor/editMonoplaza")
    public void editMonoplaza(
        @WebParam(name = "monoplaza", targetNamespace = "")
        Monoplaza monoplaza);

    /**
     * 
     * @param circuito
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "editCircuito", targetNamespace = "http://ws/", className = "ws.EditCircuito")
    @Action(input = "http://ws/Gestor/editCircuito")
    public void editCircuito(
        @WebParam(name = "circuito", targetNamespace = "")
        Circuito circuito);

    /**
     * 
     * @param monoplaza
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removeMonoplaza", targetNamespace = "http://ws/", className = "ws.RemoveMonoplaza")
    @Action(input = "http://ws/Gestor/removeMonoplaza")
    public void removeMonoplaza(
        @WebParam(name = "monoplaza", targetNamespace = "")
        int monoplaza);

    /**
     * 
     * @param idPiloto
     * @return
     *     returns ws.Piloto
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findPiloto", targetNamespace = "http://ws/", className = "ws.FindPiloto")
    @ResponseWrapper(localName = "findPilotoResponse", targetNamespace = "http://ws/", className = "ws.FindPilotoResponse")
    @Action(input = "http://ws/Gestor/findPilotoRequest", output = "http://ws/Gestor/findPilotoResponse")
    public Piloto findPiloto(
        @WebParam(name = "idPiloto", targetNamespace = "")
        int idPiloto);

    /**
     * 
     * @param piloto
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "removePiloto", targetNamespace = "http://ws/", className = "ws.RemovePiloto")
    @Action(input = "http://ws/Gestor/removePiloto")
    public void removePiloto(
        @WebParam(name = "piloto", targetNamespace = "")
        int piloto);

    /**
     * 
     * @param idPremio
     * @return
     *     returns ws.Premio
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findPremio", targetNamespace = "http://ws/", className = "ws.FindPremio")
    @ResponseWrapper(localName = "findPremioResponse", targetNamespace = "http://ws/", className = "ws.FindPremioResponse")
    @Action(input = "http://ws/Gestor/findPremioRequest", output = "http://ws/Gestor/findPremioResponse")
    public Premio findPremio(
        @WebParam(name = "idPremio", targetNamespace = "")
        int idPremio);

    /**
     * 
     * @param idCircuito
     * @return
     *     returns ws.Circuito
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findCircuito", targetNamespace = "http://ws/", className = "ws.FindCircuito")
    @ResponseWrapper(localName = "findCircuitoResponse", targetNamespace = "http://ws/", className = "ws.FindCircuitoResponse")
    @Action(input = "http://ws/Gestor/findCircuitoRequest", output = "http://ws/Gestor/findCircuitoResponse")
    public Circuito findCircuito(
        @WebParam(name = "idCircuito", targetNamespace = "")
        int idCircuito);

    /**
     * 
     * @param premio
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "createPremio", targetNamespace = "http://ws/", className = "ws.CreatePremio")
    @Action(input = "http://ws/Gestor/createPremio")
    public void createPremio(
        @WebParam(name = "premio", targetNamespace = "")
        Premio premio);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Monoplaza>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllMonoplaza", targetNamespace = "http://ws/", className = "ws.FindAllMonoplaza")
    @ResponseWrapper(localName = "findAllMonoplazaResponse", targetNamespace = "http://ws/", className = "ws.FindAllMonoplazaResponse")
    @Action(input = "http://ws/Gestor/findAllMonoplazaRequest", output = "http://ws/Gestor/findAllMonoplazaResponse")
    public List<Monoplaza> findAllMonoplaza();

    /**
     * 
     * @param circuito
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "createCircuito", targetNamespace = "http://ws/", className = "ws.CreateCircuito")
    @Action(input = "http://ws/Gestor/createCircuito")
    public void createCircuito(
        @WebParam(name = "circuito", targetNamespace = "")
        Circuito circuito);

    /**
     * 
     * @param piloto
     */
    @WebMethod
    @Oneway
    @RequestWrapper(localName = "editPiloto", targetNamespace = "http://ws/", className = "ws.EditPiloto")
    @Action(input = "http://ws/Gestor/editPiloto")
    public void editPiloto(
        @WebParam(name = "piloto", targetNamespace = "")
        Piloto piloto);

    /**
     * 
     * @return
     *     returns java.util.List<ws.Campeonato>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllCampeonato", targetNamespace = "http://ws/", className = "ws.FindAllCampeonato")
    @ResponseWrapper(localName = "findAllCampeonatoResponse", targetNamespace = "http://ws/", className = "ws.FindAllCampeonatoResponse")
    @Action(input = "http://ws/Gestor/findAllCampeonatoRequest", output = "http://ws/Gestor/findAllCampeonatoResponse")
    public List<Campeonato> findAllCampeonato();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<ws.Piloto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAllPilotoByEscuderia", targetNamespace = "http://ws/", className = "ws.FindAllPilotoByEscuderia")
    @ResponseWrapper(localName = "findAllPilotoByEscuderiaResponse", targetNamespace = "http://ws/", className = "ws.FindAllPilotoByEscuderiaResponse")
    @Action(input = "http://ws/Gestor/findAllPilotoByEscuderiaRequest", output = "http://ws/Gestor/findAllPilotoByEscuderiaResponse")
    public List<Piloto> findAllPilotoByEscuderia(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
